import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintStream;import java.net.ServerSocket;import java.net.Socket;import java.sql.SQLOutput;public class Server {    public static void main(String[] args) throws IOException {        ServerSocket serverSocket = new ServerSocket(2000);        System.out.println("服务端准备就绪");        System.out.println("服务端地址：" + serverSocket.getInetAddress() + ",端口：" + serverSocket.getLocalPort());        //循环等待客户端连接，异步处理之        for (; ; ) {            Socket client = serverSocket.accept();            ClientHandler clientHandler = new ClientHandler(client);            clientHandler.start();        }    }    private static class ClientHandler extends Thread {        private Socket client;        private static volatile boolean OPEN = true;        public ClientHandler(Socket client) {            this.client = client;        }        @Override        public void run() {            System.out.println("新客户端连入，地址：，" + client.getInetAddress() + "端口：" + client.getPort());            try (//获取客户端输入流                 BufferedReader clientBR = new BufferedReader(new InputStreamReader(client.getInputStream()));                 //获取服务端输出流                 PrintStream printStream = new PrintStream(client.getOutputStream())) {                do {                    String clientMSG = clientBR.readLine();                    if (clientMSG==null){                        System.out.println("没有收到客户端信息，sleep 5 秒");                        Thread.sleep(5000);                        continue;                    }                    if ("bye".equalsIgnoreCase(clientMSG)) {                        OPEN = false;                        System.out.println("服务端回送：" + clientMSG.length());                        printStream.println(clientMSG);                    } else if ("do nothing".equalsIgnoreCase(clientMSG)) {                        System.out.println("无需回复");                    } else {                        System.out.println("客户端信息：" + clientMSG);                        System.out.println("服务端回送：" + clientMSG.length());                        printStream.println(clientMSG.length());                    }                } while (OPEN);            } catch (Exception e) {                System.out.println("连接异常断开");                e.printStackTrace();            } finally {                try {                    if (client != null)                        client.close();                } catch (IOException e) {                    e.printStackTrace();                }            }        }    }}